#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3015933982250180603) {
   out_3015933982250180603[0] = 0;
   out_3015933982250180603[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3015933982250180603[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3015933982250180603[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3015933982250180603[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3015933982250180603[5] = -sin(in_vec[1]);
   out_3015933982250180603[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3015933982250180603[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3015933982250180603[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3015933982250180603[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3015933982250180603[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3015933982250180603[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3015933982250180603[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3015933982250180603[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3015933982250180603[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3015933982250180603[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3015933982250180603[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3015933982250180603[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8400730981033182085) {
   out_8400730981033182085[0] = delta_x[0] + nom_x[0];
   out_8400730981033182085[1] = delta_x[1] + nom_x[1];
   out_8400730981033182085[2] = delta_x[2] + nom_x[2];
   out_8400730981033182085[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8400730981033182085[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8400730981033182085[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8400730981033182085[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8400730981033182085[7] = delta_x[6] + nom_x[7];
   out_8400730981033182085[8] = delta_x[7] + nom_x[8];
   out_8400730981033182085[9] = delta_x[8] + nom_x[9];
   out_8400730981033182085[10] = delta_x[9] + nom_x[10];
   out_8400730981033182085[11] = delta_x[10] + nom_x[11];
   out_8400730981033182085[12] = delta_x[11] + nom_x[12];
   out_8400730981033182085[13] = delta_x[12] + nom_x[13];
   out_8400730981033182085[14] = delta_x[13] + nom_x[14];
   out_8400730981033182085[15] = delta_x[14] + nom_x[15];
   out_8400730981033182085[16] = delta_x[15] + nom_x[16];
   out_8400730981033182085[17] = delta_x[16] + nom_x[17];
   out_8400730981033182085[18] = delta_x[17] + nom_x[18];
   out_8400730981033182085[19] = delta_x[18] + nom_x[19];
   out_8400730981033182085[20] = delta_x[19] + nom_x[20];
   out_8400730981033182085[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8387381869745561018) {
   out_8387381869745561018[0] = -nom_x[0] + true_x[0];
   out_8387381869745561018[1] = -nom_x[1] + true_x[1];
   out_8387381869745561018[2] = -nom_x[2] + true_x[2];
   out_8387381869745561018[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8387381869745561018[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8387381869745561018[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8387381869745561018[6] = -nom_x[7] + true_x[7];
   out_8387381869745561018[7] = -nom_x[8] + true_x[8];
   out_8387381869745561018[8] = -nom_x[9] + true_x[9];
   out_8387381869745561018[9] = -nom_x[10] + true_x[10];
   out_8387381869745561018[10] = -nom_x[11] + true_x[11];
   out_8387381869745561018[11] = -nom_x[12] + true_x[12];
   out_8387381869745561018[12] = -nom_x[13] + true_x[13];
   out_8387381869745561018[13] = -nom_x[14] + true_x[14];
   out_8387381869745561018[14] = -nom_x[15] + true_x[15];
   out_8387381869745561018[15] = -nom_x[16] + true_x[16];
   out_8387381869745561018[16] = -nom_x[17] + true_x[17];
   out_8387381869745561018[17] = -nom_x[18] + true_x[18];
   out_8387381869745561018[18] = -nom_x[19] + true_x[19];
   out_8387381869745561018[19] = -nom_x[20] + true_x[20];
   out_8387381869745561018[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_991325598626428970) {
   out_991325598626428970[0] = 1.0;
   out_991325598626428970[1] = 0;
   out_991325598626428970[2] = 0;
   out_991325598626428970[3] = 0;
   out_991325598626428970[4] = 0;
   out_991325598626428970[5] = 0;
   out_991325598626428970[6] = 0;
   out_991325598626428970[7] = 0;
   out_991325598626428970[8] = 0;
   out_991325598626428970[9] = 0;
   out_991325598626428970[10] = 0;
   out_991325598626428970[11] = 0;
   out_991325598626428970[12] = 0;
   out_991325598626428970[13] = 0;
   out_991325598626428970[14] = 0;
   out_991325598626428970[15] = 0;
   out_991325598626428970[16] = 0;
   out_991325598626428970[17] = 0;
   out_991325598626428970[18] = 0;
   out_991325598626428970[19] = 0;
   out_991325598626428970[20] = 0;
   out_991325598626428970[21] = 0;
   out_991325598626428970[22] = 1.0;
   out_991325598626428970[23] = 0;
   out_991325598626428970[24] = 0;
   out_991325598626428970[25] = 0;
   out_991325598626428970[26] = 0;
   out_991325598626428970[27] = 0;
   out_991325598626428970[28] = 0;
   out_991325598626428970[29] = 0;
   out_991325598626428970[30] = 0;
   out_991325598626428970[31] = 0;
   out_991325598626428970[32] = 0;
   out_991325598626428970[33] = 0;
   out_991325598626428970[34] = 0;
   out_991325598626428970[35] = 0;
   out_991325598626428970[36] = 0;
   out_991325598626428970[37] = 0;
   out_991325598626428970[38] = 0;
   out_991325598626428970[39] = 0;
   out_991325598626428970[40] = 0;
   out_991325598626428970[41] = 0;
   out_991325598626428970[42] = 0;
   out_991325598626428970[43] = 0;
   out_991325598626428970[44] = 1.0;
   out_991325598626428970[45] = 0;
   out_991325598626428970[46] = 0;
   out_991325598626428970[47] = 0;
   out_991325598626428970[48] = 0;
   out_991325598626428970[49] = 0;
   out_991325598626428970[50] = 0;
   out_991325598626428970[51] = 0;
   out_991325598626428970[52] = 0;
   out_991325598626428970[53] = 0;
   out_991325598626428970[54] = 0;
   out_991325598626428970[55] = 0;
   out_991325598626428970[56] = 0;
   out_991325598626428970[57] = 0;
   out_991325598626428970[58] = 0;
   out_991325598626428970[59] = 0;
   out_991325598626428970[60] = 0;
   out_991325598626428970[61] = 0;
   out_991325598626428970[62] = 0;
   out_991325598626428970[63] = 0;
   out_991325598626428970[64] = 0;
   out_991325598626428970[65] = 0;
   out_991325598626428970[66] = -0.5*state[4];
   out_991325598626428970[67] = -0.5*state[5];
   out_991325598626428970[68] = -0.5*state[6];
   out_991325598626428970[69] = 0;
   out_991325598626428970[70] = 0;
   out_991325598626428970[71] = 0;
   out_991325598626428970[72] = 0;
   out_991325598626428970[73] = 0;
   out_991325598626428970[74] = 0;
   out_991325598626428970[75] = 0;
   out_991325598626428970[76] = 0;
   out_991325598626428970[77] = 0;
   out_991325598626428970[78] = 0;
   out_991325598626428970[79] = 0;
   out_991325598626428970[80] = 0;
   out_991325598626428970[81] = 0;
   out_991325598626428970[82] = 0;
   out_991325598626428970[83] = 0;
   out_991325598626428970[84] = 0;
   out_991325598626428970[85] = 0;
   out_991325598626428970[86] = 0;
   out_991325598626428970[87] = 0.5*state[3];
   out_991325598626428970[88] = 0.5*state[6];
   out_991325598626428970[89] = -0.5*state[5];
   out_991325598626428970[90] = 0;
   out_991325598626428970[91] = 0;
   out_991325598626428970[92] = 0;
   out_991325598626428970[93] = 0;
   out_991325598626428970[94] = 0;
   out_991325598626428970[95] = 0;
   out_991325598626428970[96] = 0;
   out_991325598626428970[97] = 0;
   out_991325598626428970[98] = 0;
   out_991325598626428970[99] = 0;
   out_991325598626428970[100] = 0;
   out_991325598626428970[101] = 0;
   out_991325598626428970[102] = 0;
   out_991325598626428970[103] = 0;
   out_991325598626428970[104] = 0;
   out_991325598626428970[105] = 0;
   out_991325598626428970[106] = 0;
   out_991325598626428970[107] = 0;
   out_991325598626428970[108] = -0.5*state[6];
   out_991325598626428970[109] = 0.5*state[3];
   out_991325598626428970[110] = 0.5*state[4];
   out_991325598626428970[111] = 0;
   out_991325598626428970[112] = 0;
   out_991325598626428970[113] = 0;
   out_991325598626428970[114] = 0;
   out_991325598626428970[115] = 0;
   out_991325598626428970[116] = 0;
   out_991325598626428970[117] = 0;
   out_991325598626428970[118] = 0;
   out_991325598626428970[119] = 0;
   out_991325598626428970[120] = 0;
   out_991325598626428970[121] = 0;
   out_991325598626428970[122] = 0;
   out_991325598626428970[123] = 0;
   out_991325598626428970[124] = 0;
   out_991325598626428970[125] = 0;
   out_991325598626428970[126] = 0;
   out_991325598626428970[127] = 0;
   out_991325598626428970[128] = 0;
   out_991325598626428970[129] = 0.5*state[5];
   out_991325598626428970[130] = -0.5*state[4];
   out_991325598626428970[131] = 0.5*state[3];
   out_991325598626428970[132] = 0;
   out_991325598626428970[133] = 0;
   out_991325598626428970[134] = 0;
   out_991325598626428970[135] = 0;
   out_991325598626428970[136] = 0;
   out_991325598626428970[137] = 0;
   out_991325598626428970[138] = 0;
   out_991325598626428970[139] = 0;
   out_991325598626428970[140] = 0;
   out_991325598626428970[141] = 0;
   out_991325598626428970[142] = 0;
   out_991325598626428970[143] = 0;
   out_991325598626428970[144] = 0;
   out_991325598626428970[145] = 0;
   out_991325598626428970[146] = 0;
   out_991325598626428970[147] = 0;
   out_991325598626428970[148] = 0;
   out_991325598626428970[149] = 0;
   out_991325598626428970[150] = 0;
   out_991325598626428970[151] = 0;
   out_991325598626428970[152] = 0;
   out_991325598626428970[153] = 1.0;
   out_991325598626428970[154] = 0;
   out_991325598626428970[155] = 0;
   out_991325598626428970[156] = 0;
   out_991325598626428970[157] = 0;
   out_991325598626428970[158] = 0;
   out_991325598626428970[159] = 0;
   out_991325598626428970[160] = 0;
   out_991325598626428970[161] = 0;
   out_991325598626428970[162] = 0;
   out_991325598626428970[163] = 0;
   out_991325598626428970[164] = 0;
   out_991325598626428970[165] = 0;
   out_991325598626428970[166] = 0;
   out_991325598626428970[167] = 0;
   out_991325598626428970[168] = 0;
   out_991325598626428970[169] = 0;
   out_991325598626428970[170] = 0;
   out_991325598626428970[171] = 0;
   out_991325598626428970[172] = 0;
   out_991325598626428970[173] = 0;
   out_991325598626428970[174] = 0;
   out_991325598626428970[175] = 1.0;
   out_991325598626428970[176] = 0;
   out_991325598626428970[177] = 0;
   out_991325598626428970[178] = 0;
   out_991325598626428970[179] = 0;
   out_991325598626428970[180] = 0;
   out_991325598626428970[181] = 0;
   out_991325598626428970[182] = 0;
   out_991325598626428970[183] = 0;
   out_991325598626428970[184] = 0;
   out_991325598626428970[185] = 0;
   out_991325598626428970[186] = 0;
   out_991325598626428970[187] = 0;
   out_991325598626428970[188] = 0;
   out_991325598626428970[189] = 0;
   out_991325598626428970[190] = 0;
   out_991325598626428970[191] = 0;
   out_991325598626428970[192] = 0;
   out_991325598626428970[193] = 0;
   out_991325598626428970[194] = 0;
   out_991325598626428970[195] = 0;
   out_991325598626428970[196] = 0;
   out_991325598626428970[197] = 1.0;
   out_991325598626428970[198] = 0;
   out_991325598626428970[199] = 0;
   out_991325598626428970[200] = 0;
   out_991325598626428970[201] = 0;
   out_991325598626428970[202] = 0;
   out_991325598626428970[203] = 0;
   out_991325598626428970[204] = 0;
   out_991325598626428970[205] = 0;
   out_991325598626428970[206] = 0;
   out_991325598626428970[207] = 0;
   out_991325598626428970[208] = 0;
   out_991325598626428970[209] = 0;
   out_991325598626428970[210] = 0;
   out_991325598626428970[211] = 0;
   out_991325598626428970[212] = 0;
   out_991325598626428970[213] = 0;
   out_991325598626428970[214] = 0;
   out_991325598626428970[215] = 0;
   out_991325598626428970[216] = 0;
   out_991325598626428970[217] = 0;
   out_991325598626428970[218] = 0;
   out_991325598626428970[219] = 1.0;
   out_991325598626428970[220] = 0;
   out_991325598626428970[221] = 0;
   out_991325598626428970[222] = 0;
   out_991325598626428970[223] = 0;
   out_991325598626428970[224] = 0;
   out_991325598626428970[225] = 0;
   out_991325598626428970[226] = 0;
   out_991325598626428970[227] = 0;
   out_991325598626428970[228] = 0;
   out_991325598626428970[229] = 0;
   out_991325598626428970[230] = 0;
   out_991325598626428970[231] = 0;
   out_991325598626428970[232] = 0;
   out_991325598626428970[233] = 0;
   out_991325598626428970[234] = 0;
   out_991325598626428970[235] = 0;
   out_991325598626428970[236] = 0;
   out_991325598626428970[237] = 0;
   out_991325598626428970[238] = 0;
   out_991325598626428970[239] = 0;
   out_991325598626428970[240] = 0;
   out_991325598626428970[241] = 1.0;
   out_991325598626428970[242] = 0;
   out_991325598626428970[243] = 0;
   out_991325598626428970[244] = 0;
   out_991325598626428970[245] = 0;
   out_991325598626428970[246] = 0;
   out_991325598626428970[247] = 0;
   out_991325598626428970[248] = 0;
   out_991325598626428970[249] = 0;
   out_991325598626428970[250] = 0;
   out_991325598626428970[251] = 0;
   out_991325598626428970[252] = 0;
   out_991325598626428970[253] = 0;
   out_991325598626428970[254] = 0;
   out_991325598626428970[255] = 0;
   out_991325598626428970[256] = 0;
   out_991325598626428970[257] = 0;
   out_991325598626428970[258] = 0;
   out_991325598626428970[259] = 0;
   out_991325598626428970[260] = 0;
   out_991325598626428970[261] = 0;
   out_991325598626428970[262] = 0;
   out_991325598626428970[263] = 1.0;
   out_991325598626428970[264] = 0;
   out_991325598626428970[265] = 0;
   out_991325598626428970[266] = 0;
   out_991325598626428970[267] = 0;
   out_991325598626428970[268] = 0;
   out_991325598626428970[269] = 0;
   out_991325598626428970[270] = 0;
   out_991325598626428970[271] = 0;
   out_991325598626428970[272] = 0;
   out_991325598626428970[273] = 0;
   out_991325598626428970[274] = 0;
   out_991325598626428970[275] = 0;
   out_991325598626428970[276] = 0;
   out_991325598626428970[277] = 0;
   out_991325598626428970[278] = 0;
   out_991325598626428970[279] = 0;
   out_991325598626428970[280] = 0;
   out_991325598626428970[281] = 0;
   out_991325598626428970[282] = 0;
   out_991325598626428970[283] = 0;
   out_991325598626428970[284] = 0;
   out_991325598626428970[285] = 1.0;
   out_991325598626428970[286] = 0;
   out_991325598626428970[287] = 0;
   out_991325598626428970[288] = 0;
   out_991325598626428970[289] = 0;
   out_991325598626428970[290] = 0;
   out_991325598626428970[291] = 0;
   out_991325598626428970[292] = 0;
   out_991325598626428970[293] = 0;
   out_991325598626428970[294] = 0;
   out_991325598626428970[295] = 0;
   out_991325598626428970[296] = 0;
   out_991325598626428970[297] = 0;
   out_991325598626428970[298] = 0;
   out_991325598626428970[299] = 0;
   out_991325598626428970[300] = 0;
   out_991325598626428970[301] = 0;
   out_991325598626428970[302] = 0;
   out_991325598626428970[303] = 0;
   out_991325598626428970[304] = 0;
   out_991325598626428970[305] = 0;
   out_991325598626428970[306] = 0;
   out_991325598626428970[307] = 1.0;
   out_991325598626428970[308] = 0;
   out_991325598626428970[309] = 0;
   out_991325598626428970[310] = 0;
   out_991325598626428970[311] = 0;
   out_991325598626428970[312] = 0;
   out_991325598626428970[313] = 0;
   out_991325598626428970[314] = 0;
   out_991325598626428970[315] = 0;
   out_991325598626428970[316] = 0;
   out_991325598626428970[317] = 0;
   out_991325598626428970[318] = 0;
   out_991325598626428970[319] = 0;
   out_991325598626428970[320] = 0;
   out_991325598626428970[321] = 0;
   out_991325598626428970[322] = 0;
   out_991325598626428970[323] = 0;
   out_991325598626428970[324] = 0;
   out_991325598626428970[325] = 0;
   out_991325598626428970[326] = 0;
   out_991325598626428970[327] = 0;
   out_991325598626428970[328] = 0;
   out_991325598626428970[329] = 1.0;
   out_991325598626428970[330] = 0;
   out_991325598626428970[331] = 0;
   out_991325598626428970[332] = 0;
   out_991325598626428970[333] = 0;
   out_991325598626428970[334] = 0;
   out_991325598626428970[335] = 0;
   out_991325598626428970[336] = 0;
   out_991325598626428970[337] = 0;
   out_991325598626428970[338] = 0;
   out_991325598626428970[339] = 0;
   out_991325598626428970[340] = 0;
   out_991325598626428970[341] = 0;
   out_991325598626428970[342] = 0;
   out_991325598626428970[343] = 0;
   out_991325598626428970[344] = 0;
   out_991325598626428970[345] = 0;
   out_991325598626428970[346] = 0;
   out_991325598626428970[347] = 0;
   out_991325598626428970[348] = 0;
   out_991325598626428970[349] = 0;
   out_991325598626428970[350] = 0;
   out_991325598626428970[351] = 1.0;
   out_991325598626428970[352] = 0;
   out_991325598626428970[353] = 0;
   out_991325598626428970[354] = 0;
   out_991325598626428970[355] = 0;
   out_991325598626428970[356] = 0;
   out_991325598626428970[357] = 0;
   out_991325598626428970[358] = 0;
   out_991325598626428970[359] = 0;
   out_991325598626428970[360] = 0;
   out_991325598626428970[361] = 0;
   out_991325598626428970[362] = 0;
   out_991325598626428970[363] = 0;
   out_991325598626428970[364] = 0;
   out_991325598626428970[365] = 0;
   out_991325598626428970[366] = 0;
   out_991325598626428970[367] = 0;
   out_991325598626428970[368] = 0;
   out_991325598626428970[369] = 0;
   out_991325598626428970[370] = 0;
   out_991325598626428970[371] = 0;
   out_991325598626428970[372] = 0;
   out_991325598626428970[373] = 1.0;
   out_991325598626428970[374] = 0;
   out_991325598626428970[375] = 0;
   out_991325598626428970[376] = 0;
   out_991325598626428970[377] = 0;
   out_991325598626428970[378] = 0;
   out_991325598626428970[379] = 0;
   out_991325598626428970[380] = 0;
   out_991325598626428970[381] = 0;
   out_991325598626428970[382] = 0;
   out_991325598626428970[383] = 0;
   out_991325598626428970[384] = 0;
   out_991325598626428970[385] = 0;
   out_991325598626428970[386] = 0;
   out_991325598626428970[387] = 0;
   out_991325598626428970[388] = 0;
   out_991325598626428970[389] = 0;
   out_991325598626428970[390] = 0;
   out_991325598626428970[391] = 0;
   out_991325598626428970[392] = 0;
   out_991325598626428970[393] = 0;
   out_991325598626428970[394] = 0;
   out_991325598626428970[395] = 1.0;
   out_991325598626428970[396] = 0;
   out_991325598626428970[397] = 0;
   out_991325598626428970[398] = 0;
   out_991325598626428970[399] = 0;
   out_991325598626428970[400] = 0;
   out_991325598626428970[401] = 0;
   out_991325598626428970[402] = 0;
   out_991325598626428970[403] = 0;
   out_991325598626428970[404] = 0;
   out_991325598626428970[405] = 0;
   out_991325598626428970[406] = 0;
   out_991325598626428970[407] = 0;
   out_991325598626428970[408] = 0;
   out_991325598626428970[409] = 0;
   out_991325598626428970[410] = 0;
   out_991325598626428970[411] = 0;
   out_991325598626428970[412] = 0;
   out_991325598626428970[413] = 0;
   out_991325598626428970[414] = 0;
   out_991325598626428970[415] = 0;
   out_991325598626428970[416] = 0;
   out_991325598626428970[417] = 1.0;
   out_991325598626428970[418] = 0;
   out_991325598626428970[419] = 0;
   out_991325598626428970[420] = 0;
   out_991325598626428970[421] = 0;
   out_991325598626428970[422] = 0;
   out_991325598626428970[423] = 0;
   out_991325598626428970[424] = 0;
   out_991325598626428970[425] = 0;
   out_991325598626428970[426] = 0;
   out_991325598626428970[427] = 0;
   out_991325598626428970[428] = 0;
   out_991325598626428970[429] = 0;
   out_991325598626428970[430] = 0;
   out_991325598626428970[431] = 0;
   out_991325598626428970[432] = 0;
   out_991325598626428970[433] = 0;
   out_991325598626428970[434] = 0;
   out_991325598626428970[435] = 0;
   out_991325598626428970[436] = 0;
   out_991325598626428970[437] = 0;
   out_991325598626428970[438] = 0;
   out_991325598626428970[439] = 1.0;
   out_991325598626428970[440] = 0;
   out_991325598626428970[441] = 0;
   out_991325598626428970[442] = 0;
   out_991325598626428970[443] = 0;
   out_991325598626428970[444] = 0;
   out_991325598626428970[445] = 0;
   out_991325598626428970[446] = 0;
   out_991325598626428970[447] = 0;
   out_991325598626428970[448] = 0;
   out_991325598626428970[449] = 0;
   out_991325598626428970[450] = 0;
   out_991325598626428970[451] = 0;
   out_991325598626428970[452] = 0;
   out_991325598626428970[453] = 0;
   out_991325598626428970[454] = 0;
   out_991325598626428970[455] = 0;
   out_991325598626428970[456] = 0;
   out_991325598626428970[457] = 0;
   out_991325598626428970[458] = 0;
   out_991325598626428970[459] = 0;
   out_991325598626428970[460] = 0;
   out_991325598626428970[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5768235778925541051) {
   out_5768235778925541051[0] = dt*state[7] + state[0];
   out_5768235778925541051[1] = dt*state[8] + state[1];
   out_5768235778925541051[2] = dt*state[9] + state[2];
   out_5768235778925541051[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5768235778925541051[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5768235778925541051[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5768235778925541051[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5768235778925541051[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5768235778925541051[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5768235778925541051[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5768235778925541051[10] = state[10];
   out_5768235778925541051[11] = state[11];
   out_5768235778925541051[12] = state[12];
   out_5768235778925541051[13] = state[13];
   out_5768235778925541051[14] = state[14];
   out_5768235778925541051[15] = state[15];
   out_5768235778925541051[16] = state[16];
   out_5768235778925541051[17] = state[17];
   out_5768235778925541051[18] = state[18];
   out_5768235778925541051[19] = state[19];
   out_5768235778925541051[20] = state[20];
   out_5768235778925541051[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3259261285910579428) {
   out_3259261285910579428[0] = 1;
   out_3259261285910579428[1] = 0;
   out_3259261285910579428[2] = 0;
   out_3259261285910579428[3] = 0;
   out_3259261285910579428[4] = 0;
   out_3259261285910579428[5] = 0;
   out_3259261285910579428[6] = dt;
   out_3259261285910579428[7] = 0;
   out_3259261285910579428[8] = 0;
   out_3259261285910579428[9] = 0;
   out_3259261285910579428[10] = 0;
   out_3259261285910579428[11] = 0;
   out_3259261285910579428[12] = 0;
   out_3259261285910579428[13] = 0;
   out_3259261285910579428[14] = 0;
   out_3259261285910579428[15] = 0;
   out_3259261285910579428[16] = 0;
   out_3259261285910579428[17] = 0;
   out_3259261285910579428[18] = 0;
   out_3259261285910579428[19] = 0;
   out_3259261285910579428[20] = 0;
   out_3259261285910579428[21] = 0;
   out_3259261285910579428[22] = 1;
   out_3259261285910579428[23] = 0;
   out_3259261285910579428[24] = 0;
   out_3259261285910579428[25] = 0;
   out_3259261285910579428[26] = 0;
   out_3259261285910579428[27] = 0;
   out_3259261285910579428[28] = dt;
   out_3259261285910579428[29] = 0;
   out_3259261285910579428[30] = 0;
   out_3259261285910579428[31] = 0;
   out_3259261285910579428[32] = 0;
   out_3259261285910579428[33] = 0;
   out_3259261285910579428[34] = 0;
   out_3259261285910579428[35] = 0;
   out_3259261285910579428[36] = 0;
   out_3259261285910579428[37] = 0;
   out_3259261285910579428[38] = 0;
   out_3259261285910579428[39] = 0;
   out_3259261285910579428[40] = 0;
   out_3259261285910579428[41] = 0;
   out_3259261285910579428[42] = 0;
   out_3259261285910579428[43] = 0;
   out_3259261285910579428[44] = 1;
   out_3259261285910579428[45] = 0;
   out_3259261285910579428[46] = 0;
   out_3259261285910579428[47] = 0;
   out_3259261285910579428[48] = 0;
   out_3259261285910579428[49] = 0;
   out_3259261285910579428[50] = dt;
   out_3259261285910579428[51] = 0;
   out_3259261285910579428[52] = 0;
   out_3259261285910579428[53] = 0;
   out_3259261285910579428[54] = 0;
   out_3259261285910579428[55] = 0;
   out_3259261285910579428[56] = 0;
   out_3259261285910579428[57] = 0;
   out_3259261285910579428[58] = 0;
   out_3259261285910579428[59] = 0;
   out_3259261285910579428[60] = 0;
   out_3259261285910579428[61] = 0;
   out_3259261285910579428[62] = 0;
   out_3259261285910579428[63] = 0;
   out_3259261285910579428[64] = 0;
   out_3259261285910579428[65] = 0;
   out_3259261285910579428[66] = 1;
   out_3259261285910579428[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3259261285910579428[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3259261285910579428[69] = 0;
   out_3259261285910579428[70] = 0;
   out_3259261285910579428[71] = 0;
   out_3259261285910579428[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3259261285910579428[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3259261285910579428[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3259261285910579428[75] = 0;
   out_3259261285910579428[76] = 0;
   out_3259261285910579428[77] = 0;
   out_3259261285910579428[78] = 0;
   out_3259261285910579428[79] = 0;
   out_3259261285910579428[80] = 0;
   out_3259261285910579428[81] = 0;
   out_3259261285910579428[82] = 0;
   out_3259261285910579428[83] = 0;
   out_3259261285910579428[84] = 0;
   out_3259261285910579428[85] = 0;
   out_3259261285910579428[86] = 0;
   out_3259261285910579428[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3259261285910579428[88] = 1;
   out_3259261285910579428[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3259261285910579428[90] = 0;
   out_3259261285910579428[91] = 0;
   out_3259261285910579428[92] = 0;
   out_3259261285910579428[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3259261285910579428[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3259261285910579428[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3259261285910579428[96] = 0;
   out_3259261285910579428[97] = 0;
   out_3259261285910579428[98] = 0;
   out_3259261285910579428[99] = 0;
   out_3259261285910579428[100] = 0;
   out_3259261285910579428[101] = 0;
   out_3259261285910579428[102] = 0;
   out_3259261285910579428[103] = 0;
   out_3259261285910579428[104] = 0;
   out_3259261285910579428[105] = 0;
   out_3259261285910579428[106] = 0;
   out_3259261285910579428[107] = 0;
   out_3259261285910579428[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3259261285910579428[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3259261285910579428[110] = 1;
   out_3259261285910579428[111] = 0;
   out_3259261285910579428[112] = 0;
   out_3259261285910579428[113] = 0;
   out_3259261285910579428[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3259261285910579428[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3259261285910579428[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3259261285910579428[117] = 0;
   out_3259261285910579428[118] = 0;
   out_3259261285910579428[119] = 0;
   out_3259261285910579428[120] = 0;
   out_3259261285910579428[121] = 0;
   out_3259261285910579428[122] = 0;
   out_3259261285910579428[123] = 0;
   out_3259261285910579428[124] = 0;
   out_3259261285910579428[125] = 0;
   out_3259261285910579428[126] = 0;
   out_3259261285910579428[127] = 0;
   out_3259261285910579428[128] = 0;
   out_3259261285910579428[129] = 0;
   out_3259261285910579428[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3259261285910579428[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3259261285910579428[132] = 1;
   out_3259261285910579428[133] = 0;
   out_3259261285910579428[134] = 0;
   out_3259261285910579428[135] = 0;
   out_3259261285910579428[136] = 0;
   out_3259261285910579428[137] = 0;
   out_3259261285910579428[138] = 0;
   out_3259261285910579428[139] = 0;
   out_3259261285910579428[140] = 0;
   out_3259261285910579428[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3259261285910579428[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3259261285910579428[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3259261285910579428[144] = 0;
   out_3259261285910579428[145] = 0;
   out_3259261285910579428[146] = 0;
   out_3259261285910579428[147] = 0;
   out_3259261285910579428[148] = 0;
   out_3259261285910579428[149] = 0;
   out_3259261285910579428[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3259261285910579428[151] = 0;
   out_3259261285910579428[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3259261285910579428[153] = 0;
   out_3259261285910579428[154] = 1;
   out_3259261285910579428[155] = 0;
   out_3259261285910579428[156] = 0;
   out_3259261285910579428[157] = 0;
   out_3259261285910579428[158] = 0;
   out_3259261285910579428[159] = 0;
   out_3259261285910579428[160] = 0;
   out_3259261285910579428[161] = 0;
   out_3259261285910579428[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3259261285910579428[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3259261285910579428[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3259261285910579428[165] = 0;
   out_3259261285910579428[166] = 0;
   out_3259261285910579428[167] = 0;
   out_3259261285910579428[168] = 0;
   out_3259261285910579428[169] = 0;
   out_3259261285910579428[170] = 0;
   out_3259261285910579428[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3259261285910579428[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3259261285910579428[173] = 0;
   out_3259261285910579428[174] = 0;
   out_3259261285910579428[175] = 0;
   out_3259261285910579428[176] = 1;
   out_3259261285910579428[177] = 0;
   out_3259261285910579428[178] = 0;
   out_3259261285910579428[179] = 0;
   out_3259261285910579428[180] = 0;
   out_3259261285910579428[181] = 0;
   out_3259261285910579428[182] = 0;
   out_3259261285910579428[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3259261285910579428[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3259261285910579428[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3259261285910579428[186] = 0;
   out_3259261285910579428[187] = 0;
   out_3259261285910579428[188] = 0;
   out_3259261285910579428[189] = 0;
   out_3259261285910579428[190] = 0;
   out_3259261285910579428[191] = 0;
   out_3259261285910579428[192] = 0;
   out_3259261285910579428[193] = 0;
   out_3259261285910579428[194] = 0;
   out_3259261285910579428[195] = 0;
   out_3259261285910579428[196] = 0;
   out_3259261285910579428[197] = 0;
   out_3259261285910579428[198] = 1;
   out_3259261285910579428[199] = 0;
   out_3259261285910579428[200] = 0;
   out_3259261285910579428[201] = 0;
   out_3259261285910579428[202] = 0;
   out_3259261285910579428[203] = 0;
   out_3259261285910579428[204] = 0;
   out_3259261285910579428[205] = 0;
   out_3259261285910579428[206] = 0;
   out_3259261285910579428[207] = 0;
   out_3259261285910579428[208] = 0;
   out_3259261285910579428[209] = 0;
   out_3259261285910579428[210] = 0;
   out_3259261285910579428[211] = 0;
   out_3259261285910579428[212] = 0;
   out_3259261285910579428[213] = 0;
   out_3259261285910579428[214] = 0;
   out_3259261285910579428[215] = 0;
   out_3259261285910579428[216] = 0;
   out_3259261285910579428[217] = 0;
   out_3259261285910579428[218] = 0;
   out_3259261285910579428[219] = 0;
   out_3259261285910579428[220] = 1;
   out_3259261285910579428[221] = 0;
   out_3259261285910579428[222] = 0;
   out_3259261285910579428[223] = 0;
   out_3259261285910579428[224] = 0;
   out_3259261285910579428[225] = 0;
   out_3259261285910579428[226] = 0;
   out_3259261285910579428[227] = 0;
   out_3259261285910579428[228] = 0;
   out_3259261285910579428[229] = 0;
   out_3259261285910579428[230] = 0;
   out_3259261285910579428[231] = 0;
   out_3259261285910579428[232] = 0;
   out_3259261285910579428[233] = 0;
   out_3259261285910579428[234] = 0;
   out_3259261285910579428[235] = 0;
   out_3259261285910579428[236] = 0;
   out_3259261285910579428[237] = 0;
   out_3259261285910579428[238] = 0;
   out_3259261285910579428[239] = 0;
   out_3259261285910579428[240] = 0;
   out_3259261285910579428[241] = 0;
   out_3259261285910579428[242] = 1;
   out_3259261285910579428[243] = 0;
   out_3259261285910579428[244] = 0;
   out_3259261285910579428[245] = 0;
   out_3259261285910579428[246] = 0;
   out_3259261285910579428[247] = 0;
   out_3259261285910579428[248] = 0;
   out_3259261285910579428[249] = 0;
   out_3259261285910579428[250] = 0;
   out_3259261285910579428[251] = 0;
   out_3259261285910579428[252] = 0;
   out_3259261285910579428[253] = 0;
   out_3259261285910579428[254] = 0;
   out_3259261285910579428[255] = 0;
   out_3259261285910579428[256] = 0;
   out_3259261285910579428[257] = 0;
   out_3259261285910579428[258] = 0;
   out_3259261285910579428[259] = 0;
   out_3259261285910579428[260] = 0;
   out_3259261285910579428[261] = 0;
   out_3259261285910579428[262] = 0;
   out_3259261285910579428[263] = 0;
   out_3259261285910579428[264] = 1;
   out_3259261285910579428[265] = 0;
   out_3259261285910579428[266] = 0;
   out_3259261285910579428[267] = 0;
   out_3259261285910579428[268] = 0;
   out_3259261285910579428[269] = 0;
   out_3259261285910579428[270] = 0;
   out_3259261285910579428[271] = 0;
   out_3259261285910579428[272] = 0;
   out_3259261285910579428[273] = 0;
   out_3259261285910579428[274] = 0;
   out_3259261285910579428[275] = 0;
   out_3259261285910579428[276] = 0;
   out_3259261285910579428[277] = 0;
   out_3259261285910579428[278] = 0;
   out_3259261285910579428[279] = 0;
   out_3259261285910579428[280] = 0;
   out_3259261285910579428[281] = 0;
   out_3259261285910579428[282] = 0;
   out_3259261285910579428[283] = 0;
   out_3259261285910579428[284] = 0;
   out_3259261285910579428[285] = 0;
   out_3259261285910579428[286] = 1;
   out_3259261285910579428[287] = 0;
   out_3259261285910579428[288] = 0;
   out_3259261285910579428[289] = 0;
   out_3259261285910579428[290] = 0;
   out_3259261285910579428[291] = 0;
   out_3259261285910579428[292] = 0;
   out_3259261285910579428[293] = 0;
   out_3259261285910579428[294] = 0;
   out_3259261285910579428[295] = 0;
   out_3259261285910579428[296] = 0;
   out_3259261285910579428[297] = 0;
   out_3259261285910579428[298] = 0;
   out_3259261285910579428[299] = 0;
   out_3259261285910579428[300] = 0;
   out_3259261285910579428[301] = 0;
   out_3259261285910579428[302] = 0;
   out_3259261285910579428[303] = 0;
   out_3259261285910579428[304] = 0;
   out_3259261285910579428[305] = 0;
   out_3259261285910579428[306] = 0;
   out_3259261285910579428[307] = 0;
   out_3259261285910579428[308] = 1;
   out_3259261285910579428[309] = 0;
   out_3259261285910579428[310] = 0;
   out_3259261285910579428[311] = 0;
   out_3259261285910579428[312] = 0;
   out_3259261285910579428[313] = 0;
   out_3259261285910579428[314] = 0;
   out_3259261285910579428[315] = 0;
   out_3259261285910579428[316] = 0;
   out_3259261285910579428[317] = 0;
   out_3259261285910579428[318] = 0;
   out_3259261285910579428[319] = 0;
   out_3259261285910579428[320] = 0;
   out_3259261285910579428[321] = 0;
   out_3259261285910579428[322] = 0;
   out_3259261285910579428[323] = 0;
   out_3259261285910579428[324] = 0;
   out_3259261285910579428[325] = 0;
   out_3259261285910579428[326] = 0;
   out_3259261285910579428[327] = 0;
   out_3259261285910579428[328] = 0;
   out_3259261285910579428[329] = 0;
   out_3259261285910579428[330] = 1;
   out_3259261285910579428[331] = 0;
   out_3259261285910579428[332] = 0;
   out_3259261285910579428[333] = 0;
   out_3259261285910579428[334] = 0;
   out_3259261285910579428[335] = 0;
   out_3259261285910579428[336] = 0;
   out_3259261285910579428[337] = 0;
   out_3259261285910579428[338] = 0;
   out_3259261285910579428[339] = 0;
   out_3259261285910579428[340] = 0;
   out_3259261285910579428[341] = 0;
   out_3259261285910579428[342] = 0;
   out_3259261285910579428[343] = 0;
   out_3259261285910579428[344] = 0;
   out_3259261285910579428[345] = 0;
   out_3259261285910579428[346] = 0;
   out_3259261285910579428[347] = 0;
   out_3259261285910579428[348] = 0;
   out_3259261285910579428[349] = 0;
   out_3259261285910579428[350] = 0;
   out_3259261285910579428[351] = 0;
   out_3259261285910579428[352] = 1;
   out_3259261285910579428[353] = 0;
   out_3259261285910579428[354] = 0;
   out_3259261285910579428[355] = 0;
   out_3259261285910579428[356] = 0;
   out_3259261285910579428[357] = 0;
   out_3259261285910579428[358] = 0;
   out_3259261285910579428[359] = 0;
   out_3259261285910579428[360] = 0;
   out_3259261285910579428[361] = 0;
   out_3259261285910579428[362] = 0;
   out_3259261285910579428[363] = 0;
   out_3259261285910579428[364] = 0;
   out_3259261285910579428[365] = 0;
   out_3259261285910579428[366] = 0;
   out_3259261285910579428[367] = 0;
   out_3259261285910579428[368] = 0;
   out_3259261285910579428[369] = 0;
   out_3259261285910579428[370] = 0;
   out_3259261285910579428[371] = 0;
   out_3259261285910579428[372] = 0;
   out_3259261285910579428[373] = 0;
   out_3259261285910579428[374] = 1;
   out_3259261285910579428[375] = 0;
   out_3259261285910579428[376] = 0;
   out_3259261285910579428[377] = 0;
   out_3259261285910579428[378] = 0;
   out_3259261285910579428[379] = 0;
   out_3259261285910579428[380] = 0;
   out_3259261285910579428[381] = 0;
   out_3259261285910579428[382] = 0;
   out_3259261285910579428[383] = 0;
   out_3259261285910579428[384] = 0;
   out_3259261285910579428[385] = 0;
   out_3259261285910579428[386] = 0;
   out_3259261285910579428[387] = 0;
   out_3259261285910579428[388] = 0;
   out_3259261285910579428[389] = 0;
   out_3259261285910579428[390] = 0;
   out_3259261285910579428[391] = 0;
   out_3259261285910579428[392] = 0;
   out_3259261285910579428[393] = 0;
   out_3259261285910579428[394] = 0;
   out_3259261285910579428[395] = 0;
   out_3259261285910579428[396] = 1;
   out_3259261285910579428[397] = 0;
   out_3259261285910579428[398] = 0;
   out_3259261285910579428[399] = 0;
   out_3259261285910579428[400] = 0;
   out_3259261285910579428[401] = 0;
   out_3259261285910579428[402] = 0;
   out_3259261285910579428[403] = 0;
   out_3259261285910579428[404] = 0;
   out_3259261285910579428[405] = 0;
   out_3259261285910579428[406] = 0;
   out_3259261285910579428[407] = 0;
   out_3259261285910579428[408] = 0;
   out_3259261285910579428[409] = 0;
   out_3259261285910579428[410] = 0;
   out_3259261285910579428[411] = 0;
   out_3259261285910579428[412] = 0;
   out_3259261285910579428[413] = 0;
   out_3259261285910579428[414] = 0;
   out_3259261285910579428[415] = 0;
   out_3259261285910579428[416] = 0;
   out_3259261285910579428[417] = 0;
   out_3259261285910579428[418] = 1;
   out_3259261285910579428[419] = 0;
   out_3259261285910579428[420] = 0;
   out_3259261285910579428[421] = 0;
   out_3259261285910579428[422] = 0;
   out_3259261285910579428[423] = 0;
   out_3259261285910579428[424] = 0;
   out_3259261285910579428[425] = 0;
   out_3259261285910579428[426] = 0;
   out_3259261285910579428[427] = 0;
   out_3259261285910579428[428] = 0;
   out_3259261285910579428[429] = 0;
   out_3259261285910579428[430] = 0;
   out_3259261285910579428[431] = 0;
   out_3259261285910579428[432] = 0;
   out_3259261285910579428[433] = 0;
   out_3259261285910579428[434] = 0;
   out_3259261285910579428[435] = 0;
   out_3259261285910579428[436] = 0;
   out_3259261285910579428[437] = 0;
   out_3259261285910579428[438] = 0;
   out_3259261285910579428[439] = 0;
   out_3259261285910579428[440] = 1;
}
void h_4(double *state, double *unused, double *out_2250168671993795102) {
   out_2250168671993795102[0] = state[10] + state[13];
   out_2250168671993795102[1] = state[11] + state[14];
   out_2250168671993795102[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6297306697124902286) {
   out_6297306697124902286[0] = 0;
   out_6297306697124902286[1] = 0;
   out_6297306697124902286[2] = 0;
   out_6297306697124902286[3] = 0;
   out_6297306697124902286[4] = 0;
   out_6297306697124902286[5] = 0;
   out_6297306697124902286[6] = 0;
   out_6297306697124902286[7] = 0;
   out_6297306697124902286[8] = 0;
   out_6297306697124902286[9] = 0;
   out_6297306697124902286[10] = 1;
   out_6297306697124902286[11] = 0;
   out_6297306697124902286[12] = 0;
   out_6297306697124902286[13] = 1;
   out_6297306697124902286[14] = 0;
   out_6297306697124902286[15] = 0;
   out_6297306697124902286[16] = 0;
   out_6297306697124902286[17] = 0;
   out_6297306697124902286[18] = 0;
   out_6297306697124902286[19] = 0;
   out_6297306697124902286[20] = 0;
   out_6297306697124902286[21] = 0;
   out_6297306697124902286[22] = 0;
   out_6297306697124902286[23] = 0;
   out_6297306697124902286[24] = 0;
   out_6297306697124902286[25] = 0;
   out_6297306697124902286[26] = 0;
   out_6297306697124902286[27] = 0;
   out_6297306697124902286[28] = 0;
   out_6297306697124902286[29] = 0;
   out_6297306697124902286[30] = 0;
   out_6297306697124902286[31] = 0;
   out_6297306697124902286[32] = 0;
   out_6297306697124902286[33] = 1;
   out_6297306697124902286[34] = 0;
   out_6297306697124902286[35] = 0;
   out_6297306697124902286[36] = 1;
   out_6297306697124902286[37] = 0;
   out_6297306697124902286[38] = 0;
   out_6297306697124902286[39] = 0;
   out_6297306697124902286[40] = 0;
   out_6297306697124902286[41] = 0;
   out_6297306697124902286[42] = 0;
   out_6297306697124902286[43] = 0;
   out_6297306697124902286[44] = 0;
   out_6297306697124902286[45] = 0;
   out_6297306697124902286[46] = 0;
   out_6297306697124902286[47] = 0;
   out_6297306697124902286[48] = 0;
   out_6297306697124902286[49] = 0;
   out_6297306697124902286[50] = 0;
   out_6297306697124902286[51] = 0;
   out_6297306697124902286[52] = 0;
   out_6297306697124902286[53] = 0;
   out_6297306697124902286[54] = 0;
   out_6297306697124902286[55] = 0;
   out_6297306697124902286[56] = 1;
   out_6297306697124902286[57] = 0;
   out_6297306697124902286[58] = 0;
   out_6297306697124902286[59] = 1;
   out_6297306697124902286[60] = 0;
   out_6297306697124902286[61] = 0;
   out_6297306697124902286[62] = 0;
   out_6297306697124902286[63] = 0;
   out_6297306697124902286[64] = 0;
   out_6297306697124902286[65] = 0;
}
void h_9(double *state, double *unused, double *out_3907296490369071169) {
   out_3907296490369071169[0] = state[10];
   out_3907296490369071169[1] = state[11];
   out_3907296490369071169[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4862218441320201860) {
   out_4862218441320201860[0] = 0;
   out_4862218441320201860[1] = 0;
   out_4862218441320201860[2] = 0;
   out_4862218441320201860[3] = 0;
   out_4862218441320201860[4] = 0;
   out_4862218441320201860[5] = 0;
   out_4862218441320201860[6] = 0;
   out_4862218441320201860[7] = 0;
   out_4862218441320201860[8] = 0;
   out_4862218441320201860[9] = 0;
   out_4862218441320201860[10] = 1;
   out_4862218441320201860[11] = 0;
   out_4862218441320201860[12] = 0;
   out_4862218441320201860[13] = 0;
   out_4862218441320201860[14] = 0;
   out_4862218441320201860[15] = 0;
   out_4862218441320201860[16] = 0;
   out_4862218441320201860[17] = 0;
   out_4862218441320201860[18] = 0;
   out_4862218441320201860[19] = 0;
   out_4862218441320201860[20] = 0;
   out_4862218441320201860[21] = 0;
   out_4862218441320201860[22] = 0;
   out_4862218441320201860[23] = 0;
   out_4862218441320201860[24] = 0;
   out_4862218441320201860[25] = 0;
   out_4862218441320201860[26] = 0;
   out_4862218441320201860[27] = 0;
   out_4862218441320201860[28] = 0;
   out_4862218441320201860[29] = 0;
   out_4862218441320201860[30] = 0;
   out_4862218441320201860[31] = 0;
   out_4862218441320201860[32] = 0;
   out_4862218441320201860[33] = 1;
   out_4862218441320201860[34] = 0;
   out_4862218441320201860[35] = 0;
   out_4862218441320201860[36] = 0;
   out_4862218441320201860[37] = 0;
   out_4862218441320201860[38] = 0;
   out_4862218441320201860[39] = 0;
   out_4862218441320201860[40] = 0;
   out_4862218441320201860[41] = 0;
   out_4862218441320201860[42] = 0;
   out_4862218441320201860[43] = 0;
   out_4862218441320201860[44] = 0;
   out_4862218441320201860[45] = 0;
   out_4862218441320201860[46] = 0;
   out_4862218441320201860[47] = 0;
   out_4862218441320201860[48] = 0;
   out_4862218441320201860[49] = 0;
   out_4862218441320201860[50] = 0;
   out_4862218441320201860[51] = 0;
   out_4862218441320201860[52] = 0;
   out_4862218441320201860[53] = 0;
   out_4862218441320201860[54] = 0;
   out_4862218441320201860[55] = 0;
   out_4862218441320201860[56] = 1;
   out_4862218441320201860[57] = 0;
   out_4862218441320201860[58] = 0;
   out_4862218441320201860[59] = 0;
   out_4862218441320201860[60] = 0;
   out_4862218441320201860[61] = 0;
   out_4862218441320201860[62] = 0;
   out_4862218441320201860[63] = 0;
   out_4862218441320201860[64] = 0;
   out_4862218441320201860[65] = 0;
}
void h_10(double *state, double *unused, double *out_7839317026457642480) {
   out_7839317026457642480[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7839317026457642480[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7839317026457642480[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3692584655362384114) {
   out_3692584655362384114[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3692584655362384114[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3692584655362384114[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3692584655362384114[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3692584655362384114[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3692584655362384114[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3692584655362384114[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3692584655362384114[7] = 0;
   out_3692584655362384114[8] = 0;
   out_3692584655362384114[9] = 0;
   out_3692584655362384114[10] = 0;
   out_3692584655362384114[11] = 0;
   out_3692584655362384114[12] = 0;
   out_3692584655362384114[13] = 0;
   out_3692584655362384114[14] = 0;
   out_3692584655362384114[15] = 0;
   out_3692584655362384114[16] = 1;
   out_3692584655362384114[17] = 0;
   out_3692584655362384114[18] = 0;
   out_3692584655362384114[19] = 1;
   out_3692584655362384114[20] = 0;
   out_3692584655362384114[21] = 0;
   out_3692584655362384114[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3692584655362384114[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3692584655362384114[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3692584655362384114[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3692584655362384114[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3692584655362384114[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3692584655362384114[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3692584655362384114[29] = 0;
   out_3692584655362384114[30] = 0;
   out_3692584655362384114[31] = 0;
   out_3692584655362384114[32] = 0;
   out_3692584655362384114[33] = 0;
   out_3692584655362384114[34] = 0;
   out_3692584655362384114[35] = 0;
   out_3692584655362384114[36] = 0;
   out_3692584655362384114[37] = 0;
   out_3692584655362384114[38] = 0;
   out_3692584655362384114[39] = 1;
   out_3692584655362384114[40] = 0;
   out_3692584655362384114[41] = 0;
   out_3692584655362384114[42] = 1;
   out_3692584655362384114[43] = 0;
   out_3692584655362384114[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3692584655362384114[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3692584655362384114[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3692584655362384114[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3692584655362384114[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3692584655362384114[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3692584655362384114[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3692584655362384114[51] = 0;
   out_3692584655362384114[52] = 0;
   out_3692584655362384114[53] = 0;
   out_3692584655362384114[54] = 0;
   out_3692584655362384114[55] = 0;
   out_3692584655362384114[56] = 0;
   out_3692584655362384114[57] = 0;
   out_3692584655362384114[58] = 0;
   out_3692584655362384114[59] = 0;
   out_3692584655362384114[60] = 0;
   out_3692584655362384114[61] = 0;
   out_3692584655362384114[62] = 1;
   out_3692584655362384114[63] = 0;
   out_3692584655362384114[64] = 0;
   out_3692584655362384114[65] = 1;
}
void h_12(double *state, double *unused, double *out_5188725649563288731) {
   out_5188725649563288731[0] = state[0];
   out_5188725649563288731[1] = state[1];
   out_5188725649563288731[2] = state[2];
}
void H_12(double *state, double *unused, double *out_83951679917830710) {
   out_83951679917830710[0] = 1;
   out_83951679917830710[1] = 0;
   out_83951679917830710[2] = 0;
   out_83951679917830710[3] = 0;
   out_83951679917830710[4] = 0;
   out_83951679917830710[5] = 0;
   out_83951679917830710[6] = 0;
   out_83951679917830710[7] = 0;
   out_83951679917830710[8] = 0;
   out_83951679917830710[9] = 0;
   out_83951679917830710[10] = 0;
   out_83951679917830710[11] = 0;
   out_83951679917830710[12] = 0;
   out_83951679917830710[13] = 0;
   out_83951679917830710[14] = 0;
   out_83951679917830710[15] = 0;
   out_83951679917830710[16] = 0;
   out_83951679917830710[17] = 0;
   out_83951679917830710[18] = 0;
   out_83951679917830710[19] = 0;
   out_83951679917830710[20] = 0;
   out_83951679917830710[21] = 0;
   out_83951679917830710[22] = 0;
   out_83951679917830710[23] = 1;
   out_83951679917830710[24] = 0;
   out_83951679917830710[25] = 0;
   out_83951679917830710[26] = 0;
   out_83951679917830710[27] = 0;
   out_83951679917830710[28] = 0;
   out_83951679917830710[29] = 0;
   out_83951679917830710[30] = 0;
   out_83951679917830710[31] = 0;
   out_83951679917830710[32] = 0;
   out_83951679917830710[33] = 0;
   out_83951679917830710[34] = 0;
   out_83951679917830710[35] = 0;
   out_83951679917830710[36] = 0;
   out_83951679917830710[37] = 0;
   out_83951679917830710[38] = 0;
   out_83951679917830710[39] = 0;
   out_83951679917830710[40] = 0;
   out_83951679917830710[41] = 0;
   out_83951679917830710[42] = 0;
   out_83951679917830710[43] = 0;
   out_83951679917830710[44] = 0;
   out_83951679917830710[45] = 0;
   out_83951679917830710[46] = 1;
   out_83951679917830710[47] = 0;
   out_83951679917830710[48] = 0;
   out_83951679917830710[49] = 0;
   out_83951679917830710[50] = 0;
   out_83951679917830710[51] = 0;
   out_83951679917830710[52] = 0;
   out_83951679917830710[53] = 0;
   out_83951679917830710[54] = 0;
   out_83951679917830710[55] = 0;
   out_83951679917830710[56] = 0;
   out_83951679917830710[57] = 0;
   out_83951679917830710[58] = 0;
   out_83951679917830710[59] = 0;
   out_83951679917830710[60] = 0;
   out_83951679917830710[61] = 0;
   out_83951679917830710[62] = 0;
   out_83951679917830710[63] = 0;
   out_83951679917830710[64] = 0;
   out_83951679917830710[65] = 0;
}
void h_35(double *state, double *unused, double *out_9028906405635524646) {
   out_9028906405635524646[0] = state[7];
   out_9028906405635524646[1] = state[8];
   out_9028906405635524646[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4384417936227673826) {
   out_4384417936227673826[0] = 0;
   out_4384417936227673826[1] = 0;
   out_4384417936227673826[2] = 0;
   out_4384417936227673826[3] = 0;
   out_4384417936227673826[4] = 0;
   out_4384417936227673826[5] = 0;
   out_4384417936227673826[6] = 0;
   out_4384417936227673826[7] = 1;
   out_4384417936227673826[8] = 0;
   out_4384417936227673826[9] = 0;
   out_4384417936227673826[10] = 0;
   out_4384417936227673826[11] = 0;
   out_4384417936227673826[12] = 0;
   out_4384417936227673826[13] = 0;
   out_4384417936227673826[14] = 0;
   out_4384417936227673826[15] = 0;
   out_4384417936227673826[16] = 0;
   out_4384417936227673826[17] = 0;
   out_4384417936227673826[18] = 0;
   out_4384417936227673826[19] = 0;
   out_4384417936227673826[20] = 0;
   out_4384417936227673826[21] = 0;
   out_4384417936227673826[22] = 0;
   out_4384417936227673826[23] = 0;
   out_4384417936227673826[24] = 0;
   out_4384417936227673826[25] = 0;
   out_4384417936227673826[26] = 0;
   out_4384417936227673826[27] = 0;
   out_4384417936227673826[28] = 0;
   out_4384417936227673826[29] = 0;
   out_4384417936227673826[30] = 1;
   out_4384417936227673826[31] = 0;
   out_4384417936227673826[32] = 0;
   out_4384417936227673826[33] = 0;
   out_4384417936227673826[34] = 0;
   out_4384417936227673826[35] = 0;
   out_4384417936227673826[36] = 0;
   out_4384417936227673826[37] = 0;
   out_4384417936227673826[38] = 0;
   out_4384417936227673826[39] = 0;
   out_4384417936227673826[40] = 0;
   out_4384417936227673826[41] = 0;
   out_4384417936227673826[42] = 0;
   out_4384417936227673826[43] = 0;
   out_4384417936227673826[44] = 0;
   out_4384417936227673826[45] = 0;
   out_4384417936227673826[46] = 0;
   out_4384417936227673826[47] = 0;
   out_4384417936227673826[48] = 0;
   out_4384417936227673826[49] = 0;
   out_4384417936227673826[50] = 0;
   out_4384417936227673826[51] = 0;
   out_4384417936227673826[52] = 0;
   out_4384417936227673826[53] = 1;
   out_4384417936227673826[54] = 0;
   out_4384417936227673826[55] = 0;
   out_4384417936227673826[56] = 0;
   out_4384417936227673826[57] = 0;
   out_4384417936227673826[58] = 0;
   out_4384417936227673826[59] = 0;
   out_4384417936227673826[60] = 0;
   out_4384417936227673826[61] = 0;
   out_4384417936227673826[62] = 0;
   out_4384417936227673826[63] = 0;
   out_4384417936227673826[64] = 0;
   out_4384417936227673826[65] = 0;
}
void h_32(double *state, double *unused, double *out_1799345417115305318) {
   out_1799345417115305318[0] = state[3];
   out_1799345417115305318[1] = state[4];
   out_1799345417115305318[2] = state[5];
   out_1799345417115305318[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6209455692394341728) {
   out_6209455692394341728[0] = 0;
   out_6209455692394341728[1] = 0;
   out_6209455692394341728[2] = 0;
   out_6209455692394341728[3] = 1;
   out_6209455692394341728[4] = 0;
   out_6209455692394341728[5] = 0;
   out_6209455692394341728[6] = 0;
   out_6209455692394341728[7] = 0;
   out_6209455692394341728[8] = 0;
   out_6209455692394341728[9] = 0;
   out_6209455692394341728[10] = 0;
   out_6209455692394341728[11] = 0;
   out_6209455692394341728[12] = 0;
   out_6209455692394341728[13] = 0;
   out_6209455692394341728[14] = 0;
   out_6209455692394341728[15] = 0;
   out_6209455692394341728[16] = 0;
   out_6209455692394341728[17] = 0;
   out_6209455692394341728[18] = 0;
   out_6209455692394341728[19] = 0;
   out_6209455692394341728[20] = 0;
   out_6209455692394341728[21] = 0;
   out_6209455692394341728[22] = 0;
   out_6209455692394341728[23] = 0;
   out_6209455692394341728[24] = 0;
   out_6209455692394341728[25] = 0;
   out_6209455692394341728[26] = 1;
   out_6209455692394341728[27] = 0;
   out_6209455692394341728[28] = 0;
   out_6209455692394341728[29] = 0;
   out_6209455692394341728[30] = 0;
   out_6209455692394341728[31] = 0;
   out_6209455692394341728[32] = 0;
   out_6209455692394341728[33] = 0;
   out_6209455692394341728[34] = 0;
   out_6209455692394341728[35] = 0;
   out_6209455692394341728[36] = 0;
   out_6209455692394341728[37] = 0;
   out_6209455692394341728[38] = 0;
   out_6209455692394341728[39] = 0;
   out_6209455692394341728[40] = 0;
   out_6209455692394341728[41] = 0;
   out_6209455692394341728[42] = 0;
   out_6209455692394341728[43] = 0;
   out_6209455692394341728[44] = 0;
   out_6209455692394341728[45] = 0;
   out_6209455692394341728[46] = 0;
   out_6209455692394341728[47] = 0;
   out_6209455692394341728[48] = 0;
   out_6209455692394341728[49] = 1;
   out_6209455692394341728[50] = 0;
   out_6209455692394341728[51] = 0;
   out_6209455692394341728[52] = 0;
   out_6209455692394341728[53] = 0;
   out_6209455692394341728[54] = 0;
   out_6209455692394341728[55] = 0;
   out_6209455692394341728[56] = 0;
   out_6209455692394341728[57] = 0;
   out_6209455692394341728[58] = 0;
   out_6209455692394341728[59] = 0;
   out_6209455692394341728[60] = 0;
   out_6209455692394341728[61] = 0;
   out_6209455692394341728[62] = 0;
   out_6209455692394341728[63] = 0;
   out_6209455692394341728[64] = 0;
   out_6209455692394341728[65] = 0;
   out_6209455692394341728[66] = 0;
   out_6209455692394341728[67] = 0;
   out_6209455692394341728[68] = 0;
   out_6209455692394341728[69] = 0;
   out_6209455692394341728[70] = 0;
   out_6209455692394341728[71] = 0;
   out_6209455692394341728[72] = 1;
   out_6209455692394341728[73] = 0;
   out_6209455692394341728[74] = 0;
   out_6209455692394341728[75] = 0;
   out_6209455692394341728[76] = 0;
   out_6209455692394341728[77] = 0;
   out_6209455692394341728[78] = 0;
   out_6209455692394341728[79] = 0;
   out_6209455692394341728[80] = 0;
   out_6209455692394341728[81] = 0;
   out_6209455692394341728[82] = 0;
   out_6209455692394341728[83] = 0;
   out_6209455692394341728[84] = 0;
   out_6209455692394341728[85] = 0;
   out_6209455692394341728[86] = 0;
   out_6209455692394341728[87] = 0;
}
void h_13(double *state, double *unused, double *out_5425232971149804905) {
   out_5425232971149804905[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5425232971149804905[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5425232971149804905[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1411400110440861016) {
   out_1411400110440861016[0] = 0;
   out_1411400110440861016[1] = 0;
   out_1411400110440861016[2] = 0;
   out_1411400110440861016[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1411400110440861016[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1411400110440861016[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1411400110440861016[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1411400110440861016[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1411400110440861016[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1411400110440861016[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1411400110440861016[10] = 0;
   out_1411400110440861016[11] = 0;
   out_1411400110440861016[12] = 0;
   out_1411400110440861016[13] = 0;
   out_1411400110440861016[14] = 0;
   out_1411400110440861016[15] = 0;
   out_1411400110440861016[16] = 0;
   out_1411400110440861016[17] = 0;
   out_1411400110440861016[18] = 0;
   out_1411400110440861016[19] = 0;
   out_1411400110440861016[20] = 0;
   out_1411400110440861016[21] = 0;
   out_1411400110440861016[22] = 0;
   out_1411400110440861016[23] = 0;
   out_1411400110440861016[24] = 0;
   out_1411400110440861016[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1411400110440861016[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1411400110440861016[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1411400110440861016[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1411400110440861016[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1411400110440861016[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1411400110440861016[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1411400110440861016[32] = 0;
   out_1411400110440861016[33] = 0;
   out_1411400110440861016[34] = 0;
   out_1411400110440861016[35] = 0;
   out_1411400110440861016[36] = 0;
   out_1411400110440861016[37] = 0;
   out_1411400110440861016[38] = 0;
   out_1411400110440861016[39] = 0;
   out_1411400110440861016[40] = 0;
   out_1411400110440861016[41] = 0;
   out_1411400110440861016[42] = 0;
   out_1411400110440861016[43] = 0;
   out_1411400110440861016[44] = 0;
   out_1411400110440861016[45] = 0;
   out_1411400110440861016[46] = 0;
   out_1411400110440861016[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1411400110440861016[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1411400110440861016[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1411400110440861016[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1411400110440861016[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1411400110440861016[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1411400110440861016[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1411400110440861016[54] = 0;
   out_1411400110440861016[55] = 0;
   out_1411400110440861016[56] = 0;
   out_1411400110440861016[57] = 0;
   out_1411400110440861016[58] = 0;
   out_1411400110440861016[59] = 0;
   out_1411400110440861016[60] = 0;
   out_1411400110440861016[61] = 0;
   out_1411400110440861016[62] = 0;
   out_1411400110440861016[63] = 0;
   out_1411400110440861016[64] = 0;
   out_1411400110440861016[65] = 0;
}
void h_14(double *state, double *unused, double *out_3907296490369071169) {
   out_3907296490369071169[0] = state[10];
   out_3907296490369071169[1] = state[11];
   out_3907296490369071169[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4862218441320201860) {
   out_4862218441320201860[0] = 0;
   out_4862218441320201860[1] = 0;
   out_4862218441320201860[2] = 0;
   out_4862218441320201860[3] = 0;
   out_4862218441320201860[4] = 0;
   out_4862218441320201860[5] = 0;
   out_4862218441320201860[6] = 0;
   out_4862218441320201860[7] = 0;
   out_4862218441320201860[8] = 0;
   out_4862218441320201860[9] = 0;
   out_4862218441320201860[10] = 1;
   out_4862218441320201860[11] = 0;
   out_4862218441320201860[12] = 0;
   out_4862218441320201860[13] = 0;
   out_4862218441320201860[14] = 0;
   out_4862218441320201860[15] = 0;
   out_4862218441320201860[16] = 0;
   out_4862218441320201860[17] = 0;
   out_4862218441320201860[18] = 0;
   out_4862218441320201860[19] = 0;
   out_4862218441320201860[20] = 0;
   out_4862218441320201860[21] = 0;
   out_4862218441320201860[22] = 0;
   out_4862218441320201860[23] = 0;
   out_4862218441320201860[24] = 0;
   out_4862218441320201860[25] = 0;
   out_4862218441320201860[26] = 0;
   out_4862218441320201860[27] = 0;
   out_4862218441320201860[28] = 0;
   out_4862218441320201860[29] = 0;
   out_4862218441320201860[30] = 0;
   out_4862218441320201860[31] = 0;
   out_4862218441320201860[32] = 0;
   out_4862218441320201860[33] = 1;
   out_4862218441320201860[34] = 0;
   out_4862218441320201860[35] = 0;
   out_4862218441320201860[36] = 0;
   out_4862218441320201860[37] = 0;
   out_4862218441320201860[38] = 0;
   out_4862218441320201860[39] = 0;
   out_4862218441320201860[40] = 0;
   out_4862218441320201860[41] = 0;
   out_4862218441320201860[42] = 0;
   out_4862218441320201860[43] = 0;
   out_4862218441320201860[44] = 0;
   out_4862218441320201860[45] = 0;
   out_4862218441320201860[46] = 0;
   out_4862218441320201860[47] = 0;
   out_4862218441320201860[48] = 0;
   out_4862218441320201860[49] = 0;
   out_4862218441320201860[50] = 0;
   out_4862218441320201860[51] = 0;
   out_4862218441320201860[52] = 0;
   out_4862218441320201860[53] = 0;
   out_4862218441320201860[54] = 0;
   out_4862218441320201860[55] = 0;
   out_4862218441320201860[56] = 1;
   out_4862218441320201860[57] = 0;
   out_4862218441320201860[58] = 0;
   out_4862218441320201860[59] = 0;
   out_4862218441320201860[60] = 0;
   out_4862218441320201860[61] = 0;
   out_4862218441320201860[62] = 0;
   out_4862218441320201860[63] = 0;
   out_4862218441320201860[64] = 0;
   out_4862218441320201860[65] = 0;
}
void h_33(double *state, double *unused, double *out_238084949913907181) {
   out_238084949913907181[0] = state[16];
   out_238084949913907181[1] = state[17];
   out_238084949913907181[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1233860931588816222) {
   out_1233860931588816222[0] = 0;
   out_1233860931588816222[1] = 0;
   out_1233860931588816222[2] = 0;
   out_1233860931588816222[3] = 0;
   out_1233860931588816222[4] = 0;
   out_1233860931588816222[5] = 0;
   out_1233860931588816222[6] = 0;
   out_1233860931588816222[7] = 0;
   out_1233860931588816222[8] = 0;
   out_1233860931588816222[9] = 0;
   out_1233860931588816222[10] = 0;
   out_1233860931588816222[11] = 0;
   out_1233860931588816222[12] = 0;
   out_1233860931588816222[13] = 0;
   out_1233860931588816222[14] = 0;
   out_1233860931588816222[15] = 0;
   out_1233860931588816222[16] = 1;
   out_1233860931588816222[17] = 0;
   out_1233860931588816222[18] = 0;
   out_1233860931588816222[19] = 0;
   out_1233860931588816222[20] = 0;
   out_1233860931588816222[21] = 0;
   out_1233860931588816222[22] = 0;
   out_1233860931588816222[23] = 0;
   out_1233860931588816222[24] = 0;
   out_1233860931588816222[25] = 0;
   out_1233860931588816222[26] = 0;
   out_1233860931588816222[27] = 0;
   out_1233860931588816222[28] = 0;
   out_1233860931588816222[29] = 0;
   out_1233860931588816222[30] = 0;
   out_1233860931588816222[31] = 0;
   out_1233860931588816222[32] = 0;
   out_1233860931588816222[33] = 0;
   out_1233860931588816222[34] = 0;
   out_1233860931588816222[35] = 0;
   out_1233860931588816222[36] = 0;
   out_1233860931588816222[37] = 0;
   out_1233860931588816222[38] = 0;
   out_1233860931588816222[39] = 1;
   out_1233860931588816222[40] = 0;
   out_1233860931588816222[41] = 0;
   out_1233860931588816222[42] = 0;
   out_1233860931588816222[43] = 0;
   out_1233860931588816222[44] = 0;
   out_1233860931588816222[45] = 0;
   out_1233860931588816222[46] = 0;
   out_1233860931588816222[47] = 0;
   out_1233860931588816222[48] = 0;
   out_1233860931588816222[49] = 0;
   out_1233860931588816222[50] = 0;
   out_1233860931588816222[51] = 0;
   out_1233860931588816222[52] = 0;
   out_1233860931588816222[53] = 0;
   out_1233860931588816222[54] = 0;
   out_1233860931588816222[55] = 0;
   out_1233860931588816222[56] = 0;
   out_1233860931588816222[57] = 0;
   out_1233860931588816222[58] = 0;
   out_1233860931588816222[59] = 0;
   out_1233860931588816222[60] = 0;
   out_1233860931588816222[61] = 0;
   out_1233860931588816222[62] = 1;
   out_1233860931588816222[63] = 0;
   out_1233860931588816222[64] = 0;
   out_1233860931588816222[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3015933982250180603) {
  H(in_vec, out_3015933982250180603);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8400730981033182085) {
  err_fun(nom_x, delta_x, out_8400730981033182085);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8387381869745561018) {
  inv_err_fun(nom_x, true_x, out_8387381869745561018);
}
void live_H_mod_fun(double *state, double *out_991325598626428970) {
  H_mod_fun(state, out_991325598626428970);
}
void live_f_fun(double *state, double dt, double *out_5768235778925541051) {
  f_fun(state,  dt, out_5768235778925541051);
}
void live_F_fun(double *state, double dt, double *out_3259261285910579428) {
  F_fun(state,  dt, out_3259261285910579428);
}
void live_h_4(double *state, double *unused, double *out_2250168671993795102) {
  h_4(state, unused, out_2250168671993795102);
}
void live_H_4(double *state, double *unused, double *out_6297306697124902286) {
  H_4(state, unused, out_6297306697124902286);
}
void live_h_9(double *state, double *unused, double *out_3907296490369071169) {
  h_9(state, unused, out_3907296490369071169);
}
void live_H_9(double *state, double *unused, double *out_4862218441320201860) {
  H_9(state, unused, out_4862218441320201860);
}
void live_h_10(double *state, double *unused, double *out_7839317026457642480) {
  h_10(state, unused, out_7839317026457642480);
}
void live_H_10(double *state, double *unused, double *out_3692584655362384114) {
  H_10(state, unused, out_3692584655362384114);
}
void live_h_12(double *state, double *unused, double *out_5188725649563288731) {
  h_12(state, unused, out_5188725649563288731);
}
void live_H_12(double *state, double *unused, double *out_83951679917830710) {
  H_12(state, unused, out_83951679917830710);
}
void live_h_35(double *state, double *unused, double *out_9028906405635524646) {
  h_35(state, unused, out_9028906405635524646);
}
void live_H_35(double *state, double *unused, double *out_4384417936227673826) {
  H_35(state, unused, out_4384417936227673826);
}
void live_h_32(double *state, double *unused, double *out_1799345417115305318) {
  h_32(state, unused, out_1799345417115305318);
}
void live_H_32(double *state, double *unused, double *out_6209455692394341728) {
  H_32(state, unused, out_6209455692394341728);
}
void live_h_13(double *state, double *unused, double *out_5425232971149804905) {
  h_13(state, unused, out_5425232971149804905);
}
void live_H_13(double *state, double *unused, double *out_1411400110440861016) {
  H_13(state, unused, out_1411400110440861016);
}
void live_h_14(double *state, double *unused, double *out_3907296490369071169) {
  h_14(state, unused, out_3907296490369071169);
}
void live_H_14(double *state, double *unused, double *out_4862218441320201860) {
  H_14(state, unused, out_4862218441320201860);
}
void live_h_33(double *state, double *unused, double *out_238084949913907181) {
  h_33(state, unused, out_238084949913907181);
}
void live_H_33(double *state, double *unused, double *out_1233860931588816222) {
  H_33(state, unused, out_1233860931588816222);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
